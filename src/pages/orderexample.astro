---
import Layout from "../layouts/Layout.astro";

// Datos de ejemplo del pago procesado (simulando lo que viene de payment-success)
const orderData = {
  id: "8ac7a4a2997bf99001997d4b9bfa2153",
  paymentType: "DB",
  paymentBrand: "VISA",
  amount: "77.00",
  currency: "USD",
  merchantTransactionId: "ORD_MFYDOGU5_UYMHJZGT",
  timestamp: "2025-09-24 19:55:31+0000",
  status: "APPROVED",
  result: {
    code: "000.100.112",
    description:
      "Request successfully processed in 'Merchant in Connector Test Mode'",
  },
  resultDetails: {
    AuthCode: "008930",
    ReferenceNbr: "250924_000075",
    AcquirerTimestamp: "2025-09-24 19:52:44",
  },
  card: {
    last4Digits: "0000",
  },
  customer: {
    givenName: "Juan",
    middleName: "Pablo",
    surname: "Pérez",
    merchantCustomerId: "USR123",
  },
  registrationId: "8ac7a4a2997bf99001997d4b9bfa2153", // Simula suscripción
};

const isSuccess = true;
const isPending = false;
const isSubscription = true;
---

<Layout
  title="Orden Confirmada - Animus Society"
  description="Tu pago ha sido procesado exitosamente"
>
  <style is:global>
    html,
    body {
      overflow: auto !important;
      height: auto !important;
    }
  </style>

  <div class="min-h-screen bg-gray-50 py-8 px-4 sm:px-6 lg:px-8">
    <div class="max-w-4xl mx-auto mb-4">
      <a
        href="/"
        class="inline-flex items-center justify-center w-10 h-10 text-gray-600 hover:text-gray-900 hover:bg-white rounded-full transition-all duration-200 shadow-sm border border-gray-200"
      >
        <svg
          class="w-5 h-5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
      </a>
    </div>

    <div class="max-w-4xl mx-auto">
      <div class="text-center mb-8">
        <div
          class={`inline-flex items-center justify-center w-16 h-16 rounded-full mb-4 ${
            isSuccess
              ? "bg-green-100"
              : isPending
                ? "bg-yellow-100"
                : "bg-red-100"
          }`}
        >
          {
            isSuccess ? (
              <svg
                class="w-8 h-8 text-green-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M5 13l4 4L19 7"
                />
              </svg>
            ) : isPending ? (
              <svg
                class="w-8 h-8 text-yellow-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M12 8v4m0 4h.01M12 2a10 10 0 110 20 10 10 0 010-20z"
                />
              </svg>
            ) : (
              <svg
                class="w-8 h-8 text-red-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            )
          }
        </div>

        <h1 class="text-2xl font-semibold text-gray-900 mb-2">
          {
            isSuccess
              ? isSubscription
                ? "¡Suscripción Activada!"
                : "¡Pago Confirmado!"
              : isPending
                ? "Pago en Proceso"
                : "Error en el Pago"
          }
        </h1>

        <p class="text-gray-600">
          {
            isSuccess
              ? `Tu ${isSubscription ? "suscripción" : "pago"} ha sido procesado exitosamente`
              : isPending
                ? "Estamos verificando tu pago con el procesador. Por favor espera unos segundos..."
                : orderData?.result?.description || "Error procesando el pago"
          }
        </p>

        {
          isPending && (
            <div class="mt-4">
              <div class="flex items-center justify-center space-x-2">
                <div class="animate-spin rounded-full h-5 w-5 border-b-2 border-yellow-600" />
                <span class="text-sm text-gray-600">
                  Verificando estado del pago...
                </span>
              </div>
              <p class="text-xs text-gray-500 mt-2">
                Esta página se actualizará automáticamente cuando el pago sea
                confirmado
              </p>
            </div>
          )
        }
      </div>

      <div class="bg-white shadow rounded-lg overflow-hidden">
        <div class="border-b border-gray-200 px-6 py-4">
          <h2 class="text-lg font-medium text-gray-900">
            Detalles de la Transacción
          </h2>
        </div>

        <div class="px-6 py-4 space-y-6">
          <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
            <div>
              <h3 class="text-sm font-medium text-gray-500">
                ID de Transacción
              </h3>
              <p class="mt-1 text-sm text-gray-900">
                {orderData.merchantTransactionId}
              </p>
            </div>

            <div>
              <h3 class="text-sm font-medium text-gray-500">Monto</h3>
              <p class="mt-1 text-sm text-gray-900">
                ${orderData.amount}
                {orderData.currency}
              </p>
            </div>

            <div>
              <h3 class="text-sm font-medium text-gray-500">Método de Pago</h3>
              <p class="mt-1 text-sm text-gray-900">
                {orderData?.paymentBrand} (**** {orderData?.card?.last4Digits})
              </p>
            </div>

            <div>
              <h3 class="text-sm font-medium text-gray-500">Fecha</h3>
              <p class="mt-1 text-sm text-gray-900">
                {
                  (() => {
                    const d = new Date(orderData.timestamp);
                    const safe = isNaN(d.getTime()) ? new Date() : d;
                    return safe.toLocaleString("es-EC", {
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                      hour: "2-digit",
                      minute: "2-digit",
                      timeZone: "America/Guayaquil",
                    });
                  })()
                }
              </p>
            </div>

            {
              orderData.resultDetails && (
                <>
                  <div>
                    <h3 class="text-sm font-medium text-gray-500">
                      Código de Autorización
                    </h3>
                    <p class="mt-1 text-sm text-gray-900">
                      {orderData.resultDetails.AuthCode}
                    </p>
                  </div>

                  <div>
                    <h3 class="text-sm font-medium text-gray-500">
                      Número de Referencia
                    </h3>
                    <p class="mt-1 text-sm text-gray-900">
                      {orderData.resultDetails.ReferenceNbr}
                    </p>
                  </div>
                </>
              )
            }
          </div>

          {
            orderData.customer && (
              <div>
                <h3 class="text-sm font-medium text-gray-500 mb-2">
                  Información del Cliente
                </h3>
                <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                  <p class="text-sm text-gray-900">
                    <span class="font-medium">Nombre:</span>{" "}
                    {`${orderData.customer.givenName ?? ""} ${orderData.customer.middleName ?? ""} ${orderData.customer.surname ?? ""}`.trim()}
                  </p>
                  {orderData.customer.merchantCustomerId && (
                    <p class="text-sm text-gray-900">
                      <span class="font-medium">ID de Cliente:</span>{" "}
                      {orderData.customer.merchantCustomerId}
                    </p>
                  )}
                </div>
              </div>
            )
          }

          {
            isSubscription && (
              <div>
                <h3 class="text-sm font-medium text-gray-500 mb-2">
                  Detalles de la Suscripción
                </h3>
                <div class="grid grid-cols-1 gap-4 sm:grid-cols-2">
                  <p class="text-sm text-gray-900">
                    <span class="font-medium">ID de Registro:</span>{" "}
                    {orderData.registrationId}
                  </p>
                </div>
              </div>
            )
          }
        </div>
      </div>

      <div class="mt-8 text-center">
        <div
          class="flex flex-col sm:flex-row gap-4 justify-center items-center"
        >
          <a
            href="/"
            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-gray-900 hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all duration-200"
          >
            Volver al Inicio
          </a>

          <a
            href="https://wa.link/tj0wly"
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center gap-2 px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-all duration-200"
          >
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path
                d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"
              ></path>
            </svg>
            Contáctanos
          </a>
        </div>

        <p class="mt-4 text-xs text-gray-500">
          ¿Tienes alguna duda sobre tu pago? Nuestro equipo está disponible en
          WhatsApp para ayudarte.
        </p>
      </div>
    </div>
  </div>
</Layout>
