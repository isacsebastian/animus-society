---
interface Props {
  id: string;
}

const { id } = Astro.props;
---

<div
  id={id}
  class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden items-center justify-center p-4"
>
  <div
    class="bg-white rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto"
  >
    <!-- Header -->
    <div
      class="sticky top-0 bg-white border-b border-gray-200 px-6 py-4 flex justify-between items-center rounded-t-2xl"
    >
      <h2 class="text-2xl font-bold text-gray-900">Detalle del Pago</h2>
      <button
        onclick={`closePaymentDetailModal('${id}')`}
        class="text-gray-500 hover:text-gray-700 transition-colors"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>

    <!-- Content -->
    <div id={`${id}-content`} class="p-6">
      <!-- Loading state -->
      <div class="flex justify-center items-center py-12">
        <div
          class="animate-spin rounded-full h-12 w-12 border-b-2 border-[#6D4AEB]"
        >
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  import type { PaymentDetail } from "../lib/history-payments";
  import { getPaymentDetail } from "../lib/history-payments";

  (window as any).openPaymentDetailModal = async (
    modalId: string,
    paymentId: string
  ) => {
    const modal = document.getElementById(modalId);
    if (!modal) return;

    modal.classList.remove("hidden");
    modal.classList.add("flex");

    const contentDiv = document.getElementById(`${modalId}-content`);
    if (!contentDiv) return;

    try {
      const detail: PaymentDetail = await getPaymentDetail(paymentId);

      // Mapear tipo de pago a español
      const paymentTypeMap: Record<string, string> = {
        ONE_TIME: "Pago Único",
        RECURRING: "Pago Recurrente",
        INITIAL: "Pago Inicial (Suscripción)",
      };

      // Mapear estado a español
      const statusMap: Record<string, { text: string; color: string }> = {
        APPROVED: { text: "Aprobado", color: "bg-green-100 text-green-800" },
        PENDING: { text: "Pendiente", color: "bg-yellow-100 text-yellow-800" },
        REJECTED: { text: "Rechazado", color: "bg-red-100 text-red-800" },
        FAILED: { text: "Fallido", color: "bg-red-100 text-red-800" },
        CANCELLED: { text: "Cancelado", color: "bg-gray-100 text-gray-800" },
      };

      const status = statusMap[detail.payment.status] || {
        text: detail.payment.status,
        color: "bg-gray-100 text-gray-800",
      };

      contentDiv.innerHTML = `
        <div class="space-y-6">
          <!-- Información del Pago -->
          <div class="bg-gray-50 rounded-lg p-6 border border-gray-200">
            <h3 class="text-lg font-bold text-gray-900 mb-4 flex items-center gap-2">
              <svg class="w-5 h-5 text-[#6D4AEB]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z"></path>
              </svg>
              Información del Pago
            </h3>
            <div class="grid md:grid-cols-2 gap-4">
              <div>
                <p class="text-sm text-gray-600">ID de Transacción</p>
                <p class="font-mono text-sm font-semibold text-gray-900">${detail.payment.merchantTransactionId}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Tipo de Pago</p>
                <p class="font-semibold text-gray-900">${paymentTypeMap[detail.payment.paymentType] || detail.payment.paymentType}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Monto</p>
                <p class="text-2xl font-bold text-[#6D4AEB]">${detail.payment.currency} $${detail.payment.amount.toFixed(2)}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Estado</p>
                <span class="inline-block px-3 py-1 rounded-full text-sm font-semibold ${status.color}">${status.text}</span>
              </div>
              <div>
                <p class="text-sm text-gray-600">Fecha de Creación</p>
                <p class="font-semibold text-gray-900">${new Date(detail.payment.createdAt).toLocaleString("es-EC", { dateStyle: "medium", timeStyle: "short" })}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Última Actualización</p>
                <p class="font-semibold text-gray-900">${new Date(detail.payment.updatedAt).toLocaleString("es-EC", { dateStyle: "medium", timeStyle: "short" })}</p>
              </div>
            </div>
          </div>

          <!-- Desglose de Impuestos -->
          <div class="bg-gray-50 rounded-lg p-6 border border-gray-200">
            <h3 class="text-lg font-bold text-gray-900 mb-4">Desglose de Impuestos</h3>
            <div class="space-y-2">
              <div class="flex justify-between">
                <span class="text-gray-600">Base Imponible (0%)</span>
                <span class="font-semibold text-gray-900">$${detail.payment.base0.toFixed(2)}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">Base Imponible</span>
                <span class="font-semibold text-gray-900">$${detail.payment.baseImp.toFixed(2)}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">IVA</span>
                <span class="font-semibold text-gray-900">$${detail.payment.iva.toFixed(2)}</span>
              </div>
              <div class="border-t border-gray-300 pt-2 mt-2 flex justify-between">
                <span class="font-bold text-gray-900">Total</span>
                <span class="font-bold text-[#6D4AEB] text-lg">$${detail.payment.amount.toFixed(2)}</span>
              </div>
            </div>
          </div>

          <!-- Información del Cliente -->
          <div class="bg-gray-50 rounded-lg p-6 border border-gray-200">
            <h3 class="text-lg font-bold text-gray-900 mb-4 flex items-center gap-2">
              <svg class="w-5 h-5 text-[#6D4AEB]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              Información del Cliente
            </h3>
            <div class="grid md:grid-cols-2 gap-4">
              <div>
                <p class="text-sm text-gray-600">Nombre Completo</p>
                <p class="font-semibold text-gray-900">${detail.customer.givenName} ${detail.customer.middleName} ${detail.customer.surname}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Email</p>
                <p class="font-semibold text-gray-900">${detail.customer.email}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Tipo de Documento</p>
                <p class="font-semibold text-gray-900">${detail.customer.identificationDocType}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Número de Documento</p>
                <p class="font-mono font-semibold text-gray-900">${detail.customer.identificationDocId}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Teléfono</p>
                <p class="font-semibold text-gray-900">${detail.customer.phone}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Dirección</p>
                <p class="font-semibold text-gray-900">${detail.customer.street1}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Ciudad/Estado</p>
                <p class="font-semibold text-gray-900">${detail.customer.city}, ${detail.customer.state}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">País/Código Postal</p>
                <p class="font-semibold text-gray-900">${detail.customer.country} - ${detail.customer.postcode}</p>
              </div>
            </div>
          </div>

          ${
            detail.token
              ? `
          <!-- Información del Método de Pago -->
          <div class="bg-gray-50 rounded-lg p-6 border border-gray-200">
            <h3 class="text-lg font-bold text-gray-900 mb-4 flex items-center gap-2">
              <svg class="w-5 h-5 text-[#6D4AEB]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"></path>
              </svg>
              Método de Pago
            </h3>
            <div class="grid md:grid-cols-2 gap-4">
              <div>
                <p class="text-sm text-gray-600">Marca de Tarjeta</p>
                <p class="font-semibold text-gray-900">${detail.token.brand}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Últimos 4 Dígitos</p>
                <p class="font-mono font-semibold text-gray-900">**** **** **** ${detail.token.last4}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Fecha de Expiración</p>
                <p class="font-semibold text-gray-900">${String(detail.token.expiryMonth).padStart(2, "0")}/${detail.token.expiryYear}</p>
              </div>
            </div>
          </div>
          `
              : ""
          }

          ${
            detail.subscription
              ? `
          <!-- Información de Suscripción -->
          <div class="bg-gray-50 rounded-lg p-6 border border-gray-200">
            <h3 class="text-lg font-bold text-gray-900 mb-4 flex items-center gap-2">
              <svg class="w-5 h-5 text-[#6D4AEB]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              Suscripción
            </h3>
            <div class="grid md:grid-cols-2 gap-4 mb-4">
              <div>
                <p class="text-sm text-gray-600">Tipo de Plan</p>
                <p class="font-semibold text-gray-900">${detail.subscription.planType}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Estado de Suscripción</p>
                <p class="font-semibold text-gray-900">
                  <span class="inline-block px-3 py-1 rounded-full text-sm ${
                    detail.subscription.status === 'ACTIVE' 
                      ? 'bg-green-100 text-green-800' 
                      : detail.subscription.status === 'CANCELLED' 
                      ? 'bg-red-100 text-red-800'
                      : detail.subscription.status === 'PAUSED'
                      ? 'bg-yellow-100 text-yellow-800'
                      : 'bg-gray-100 text-gray-800'
                  }">
                    ${detail.subscription.status === 'ACTIVE' ? 'Activa' : 
                      detail.subscription.status === 'CANCELLED' ? 'Cancelada' :
                      detail.subscription.status === 'PAUSED' ? 'Pausada' :
                      detail.subscription.status === 'FAILED' ? 'Fallida' : detail.subscription.status}
                  </span>
                </p>
              </div>
              <div>
                <p class="text-sm text-gray-600">Próxima Fecha de Facturación</p>
                <p class="font-semibold text-gray-900">${new Date(detail.subscription.nextBillingDate).toLocaleDateString("es-EC", { dateStyle: "medium" })}</p>
              </div>
            </div>
            ${
              detail.subscription.status === 'ACTIVE'
                ? `
            <div class="pt-4 border-t border-gray-300">
              <button
                onclick="showCancelSubscriptionModal('${detail.subscription.id}', '${detail.customer.givenName} ${detail.customer.surname}')"
                class="w-full px-4 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors font-semibold flex items-center justify-center gap-2"
              >
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
                Cancelar Suscripción
              </button>
              <p class="text-xs text-gray-500 text-center mt-2">
                Al cancelar, no se realizarán más cobros automáticos
              </p>
            </div>
            `
                : ""
            }
          </div>
          `
              : ""
          }

          <!-- Información del Gateway -->
          <div class="bg-gray-50 rounded-lg p-6 border border-gray-200">
            <h3 class="text-lg font-bold text-gray-900 mb-4 flex items-center gap-2">
              <svg class="w-5 h-5 text-[#6D4AEB]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
              </svg>
              Respuesta del Gateway
            </h3>
            <div class="space-y-3">
              <div>
                <p class="text-sm text-gray-600">Código de Resultado</p>
                <p class="font-mono font-semibold text-gray-900">${detail.gateway.resultCode}</p>
              </div>
              ${
                detail.gateway.resultDescription
                  ? `
              <div>
                <p class="text-sm text-gray-600">Descripción</p>
                <p class="font-semibold text-gray-900">${detail.gateway.resultDescription}</p>
              </div>
              `
                  : ""
              }
              ${
                detail.gateway.resourcePath
                  ? `
              <div>
                <p class="text-sm text-gray-600">Resource Path</p>
                <p class="font-mono text-sm text-gray-900 break-all">${detail.gateway.resourcePath}</p>
              </div>
              `
                  : ""
              }
              <div>
                <p class="text-sm text-gray-600 mb-2">Respuesta Completa del Gateway</p>
                <pre class="bg-gray-900 text-green-400 p-4 rounded-lg overflow-x-auto text-xs font-mono max-h-96">${JSON.stringify(detail.gateway.gatewayResponse, null, 2)}</pre>
              </div>
            </div>
          </div>
        </div>
      `;
    } catch (error) {
      console.error("Error al cargar el detalle del pago:", error);
      contentDiv.innerHTML = `
        <div class="text-center py-12">
          <svg class="w-16 h-16 text-red-500 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <p class="text-lg font-semibold text-gray-900 mb-2">Error al cargar los detalles</p>
          <p class="text-gray-600">No se pudo obtener la información del pago</p>
        </div>
      `;
    }
  };

  (window as any).closePaymentDetailModal = (modalId: string) => {
    const modal = document.getElementById(modalId);
    if (!modal) return;

    modal.classList.add("hidden");
    modal.classList.remove("flex");
  };

  // Función para mostrar modal de confirmación de cancelación
  (window as any).showCancelSubscriptionModal = (subscriptionId: string, customerName: string) => {
    // Guardar el ID de la suscripción y nombre del cliente globalmente
    (window as any).currentSubscriptionId = subscriptionId;
    (window as any).currentCustomerName = customerName;
    
    // Actualizar el mensaje del modal con el nombre del cliente
    const modal = document.getElementById('cancel-subscription-modal');
    if (modal) {
      const messageElement = modal.querySelector('[id$="-message"]');
      if (messageElement) {
        messageElement.innerHTML = `
          <p class="text-gray-700 mb-4">
            ¿Estás seguro de que deseas cancelar la suscripción de <strong>${customerName}</strong>?
          </p>
          <div class="bg-red-50 border border-red-200 rounded-lg p-4">
            <p class="text-sm text-red-800 font-semibold mb-2">Esta acción:</p>
            <ul class="text-sm text-red-700 space-y-1 list-disc list-inside">
              <li>Detendrá todos los cobros automáticos</li>
              <li>No se puede deshacer</li>
              <li>El historial de pagos se mantendrá</li>
            </ul>
          </div>
        `;
      }
    }
    
    // Mostrar el modal de confirmación
    (window as any).showModal('cancel-subscription-modal');
  };

  // Cerrar modal al hacer clic fuera
  document.addEventListener("click", (e) => {
    const target = e.target as HTMLElement;
    if (target.id && target.id.includes("payment-detail-modal")) {
      if (target === e.currentTarget) {
        (window as any).closePaymentDetailModal(target.id);
      }
    }
  });
</script>
